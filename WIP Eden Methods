var edenMethods = {
    /*
    By making the calculationPhase separate from the movementPhase, it makes it so each entity's
    evaluations are based on the same state for the whole garden. If it iterated through each
    entity evaluating and then moving, the entities whose turns were executed later would have
    their actions influenced by what the earlier entities did, rather than every entity effectively
    moving simultaneously.
    */
    tick: function(num) {
        for (var i = 0; i < num; i++) {
            this.calculationPhase();
            this.movementPhase();
            this.battlePhase();
            this.survivalPhase();
            eden.turn++;
            this.conditionsFluctuationPhase();
            this.calculationPhase();
            this.reproductionPhase();
            this.spontaneousEntityEmergence();
        }
    },
    
    calculationPhase: function() {
        eden.entities.living.forEach(entityMethods.survivalOddsCalculation);
        eden.entities.living.forEach(entityMethods.battleOddsCalculation);
        eden.entities.living.forEach(entityMethods.overallOddsCalculation);
    },
    
    movementPhase: function() {
        eden.entities.living.forEach(entityMethods.move);
    },
    
    battlePhase: function() {
        edenMethods.gardenIteration(cellMethods.battle);
    },
    
    survivalPhase: function() {
        eden.entities.living.forEach(entityMethods.survival);
    },
    
    reproductionPhase: function() {
        eden.entities.living.forEach(entityMethods.reproductionDecision);
    },
    
    conditionsFluctuationPhase: function() {
        edenMethods.gardenIteration(cellMethods.conditionsFluctuation);
    }
};
