/*
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Calculates the mean difference between each cell remaining in the row/column (depending on quadrant)
for every condition value in order to return to the baseline cell's values - on average, because
there is still variation.
*/
Cell.prototype.calculateMeanDifferences = function(baselineCell, medianCell) {
  var meanDifferences =  jQuery.extend(true, {}, defaultDifferences); // Deep clones defaultDiffs
  var remainingCells = 0; // Number of cells remaining in the row/column, depending on quadrant
  
  if (baselineCell.x - medianCell.x !== 0) {
    remainingCells = this.eden.xAxis - medianCell.x;
  } else {
    remainingCells = this.eden.yAxis - medianCell.y;
  }
  
  // Cycles conditions.physicalState, conditions.sensory, and conditions.environment
  for (var set in meanDifferences.conditions) {
    // Cycles each condition in each condition set
    for (var condition in meanDifferences.conditions[set]) {
      // Cycles each property of each condition
      for (var property in meanDifferences.conditions[set][condition]) {
        var targetCondition = meanDiffs.conditions[set][condition][property];
    
        targetCondition.level += baselineCell.conditions[set][condition][property].level -
          medianCell.conditions[set][condition][property].level;
        // Calculates the mean change needed per remaining cell
        targetCondition.level /= remainingCells;
        
        targetCondition.flux += baselineCell.conditions[set][condition][property].flux -
          medianCell.conditions[set][condition][property].flux;
        // Calculates the mean change needed per remaining cell  
        targetCondition.flux /= remainingCells;
      
        targetCondition.dynamism += baselineCell.conditions[set][condition][property].dynamism -
          medianCell.conditions[set][condition][property].dynamism;
        // Calculates the mean change needed per remaining cell  
        targetCondition.dynamism /= remainingCells;
        
        targetCondition.dynamismFlux += baselineCell.conditions[set][condition][property].dynamismFlux -
          medianCell.conditions[set][condition][property].dynamismFlux;
        // Calculates the mean change needed per remaining cell  
        targetCondition.dynamismFlux /= remainingCells;
      }
    }
  }
  
  return meanDifferences;
};
