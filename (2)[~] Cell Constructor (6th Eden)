/*
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

The purpose of the cell.prototype.eden property is so that, when needed, the cell can reference its
own host Eden object. That is, it readily has access to the reference value for the Eden of which it
is a part.

~ The conditions are missing the dynamism aspect.
*/
function cell(xCoord, yCoord, eden) {
  this.id = eden.cellCount;
  this.eden = eden;
  this.x = xCoord;
  this.y = yCoord;
  
  this.entities = new Map();
  
  /*
  Lists references to this cell and its eight adjacent neighbors.
  */
  this.localCells = [[],
                     [],
                     []];
  /*
  Conditions that rise and fall in a sinusoidal pattern. They are of the form
  y = a * sin(bx) + c, where a is the amplitude (or range), b is the period coefficient,
  and c is the average value (i.e., the value at x = 0) over one cycle.
  These values, and the x value, are initialized at the cell's creation; from them, the initial
  value is calculated.
  */
  this.cyclicalConds = {
    nourishment: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    },
    water: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    },
    waste: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    }
  };
  
  /*
  These conds affect different different senses, once those are implemented. Until then they're
  just there. Light affects an entity's visual acuity. Noise affects an entity's auditory
  acuity. Wind affects an entity's olfaction, based on what direction and how strong the
  wind is blowing (i.e., its level).
  
  I haven't decided how I want them to function yet, if I want them to follow the sinusoidal
  variation or not.
  */
  this.sensoryConds = {
    light: {},
    noise: {},
    wind: {}
  };
  
  /*
  These conditions- besides the sensory conds- are more like physical measurements that could
  correspond to some value in the real world, though their effects are vastly simpler compared
  to their real world counterparts.
  
  Their fluctuation is related to neighboring cells' fluctuations?
  */
  this.enviroConds = {
    radiation: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    },
    acidity: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    },
    airComp: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    },
    temperature: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    },
    salinity: {
      x: {level: null, flux: null, surge: 1},
      range: {level: null, flux: null, surge: 1},
      period: {level: null, flux: null, surge: 1},
      average: {level: null, flux: null, surge: 1}
    }
  };
}
