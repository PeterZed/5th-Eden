Communication. Entities can send out messages - perhaps different classes. I think it would work by
a system like broadcast. Entity sends out messages to all entities surrounding it - messages cost
small amount of health, perhaps just 0.1, They can pass the request onto entities surrounding it as well (except the entities that border both it and the initial sender).
Each message has a unique identifier. I think the most basic request would be for resources.
Perhaps sending a request to nearby entities requesting they transfer health. Those entities
evaluate the requesting entity's health and odds of survival, evaluates their own, evaluates
degree of similarity, and makes a decision vs. these factors. Health then becomes a commodity.

Perhaps cell conditions could act as a resource commodity too. Health can be transferred
in any amount, whereas conditions would be limited in transferability. The amount that could be
transferred would be an attribute of the entity - so some would develop to be better at transferring
than others.

There could also be singlecast messages, being sent to just one adjacent entity.

When I implement analyzing degree of similarity, I should also add a list of encountered entities
that it can reference. This way the calculation won't be repeated - once the entity knows an entity,
it can just .hasOwnProperty(id) to find it. Otherwise it'll do the calculation.

Entity attachment? Perhaps in the known entities list, in addition to their id number it will have
a value related to how high it rates the other entity - or how low it does. This affects interactions.



How to prevent player from deleting the configuration and save files in order to wipe the list of their
actions? Self-modifying code? Perhaps have it report in to a server (e.g., Steam has achievements that
require reporting in to the server, right? So perhaps something on the server would store the info,
regardless of uninstalling and reinstalling).) Except don't implement achievements, just take the
data for the purpose of recording their actions (obliterations, sins, etc.).



Divine Providence idea: Normally, the outcomes of various calculations are unknown - if an entity survives,
if they will win a combat, etc. Idea is to make a method that performs the calculation in advance and relays
it to the player. That is, the player predicts the entity's fate and can choose to intervene. The number of times this
is used and the player's action following it will be used in another end-game evaluation. Other things the
player may learn: What choice an entity will make for movement, combat, proliferation, etc. They have the
self-determination to make that choice, but the player can override their self-determination.
Associated stats will be used in the end game evaluation. It will take into account the player overriding self-determination
or improving/worsening odds both with and without seeing first what is fated to happen. E.g., the player makes an entity
take a choice knowing the odds, but not knowing what is currently destined to happen VS. the player overrides an entity's
self-determination after rolling to see what is currently destined to happen rather than relying on only the knowledge
of the relative probabilities of what may happen.



When the game is first started up, the caretaker greets the player.
(I envision her as looking something like Gaia from EVO: The Search for Eden.) She will introduce
herself and briefly describe her role in Eden. Before she lets the player in, she asks them if
they feel they are up to the task of taking care of these entities if they can be responsible for
them. The player will be prompted with Yes/No. If they quickly say "Yes" (or they have previously
said "No"), the caretaker will pause (character art changes to show her looking doubtful or
thoughtful). Her smile will resume and she says she'll explain a bit more about the world and its
entities first. The speed with which they hit "Yes" will influence her reaction and how she
proceeds.



Carnivorism as a survival strategy. When an entity is slain in combat, it increases the nutrients
condition on that cell by some amount, perhaps whatever its health is. I'd like the resulting
battle to impact even the winner's health to some degree, probably a little but not a lot.
However, I do not know how I will calculate the impact.

Nutrients influence an entity's health regeneration for that turn - perhaps a 1 to 1 ratio:
for each level health increases, the nutrients level decreases by one. I have an idea that maybe
nutrients level will exponentially decay into waste over time - 0 for the first couple turns they
just sit there on the cell, a little decay in the turn after, some more the turn after that, then
a lot more the turn after that, until finally all of it has decayed. This will require keeping
track of when each set of nutrients was deposited and separating the sources, otherwise the decay
will continue to increase rapidly so long as more nutrients are introduced, which doesn't make
sense if some was only just deposited. I'm thinking nutrients and waste should undergo a small
natural fluctuation, serving as food for entities to find and consume. Nutrients increase, they
remain for a few turns, then they decrease and the waste level increases. When waste hits its peak,
it remains for a couple turns, then steadily decreases to 0. Then the cycle repeats. Employing this
mechanic, the entities' health levels should also steadily decrease over time, making it necessary
for them to seek out nutrients to restore their health. I think being poorly adapted for the
cell will also impact health, in addition to affecting survivalOdds. I have much to tinker with.

However, as the garden generation is at the present, the odds will be heavily weighted against the
entities. Every cell's conditions are unrelated to their adjacent cells, making the environment
extremely hostile and unpredictable to navigate. I don't know how yet, but I'd like to establish
multiple gradients for each condition that sweep across the garden. I think Tommy's suggestion
addressed this? I must ask him.



