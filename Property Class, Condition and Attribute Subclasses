/*
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
*/
class Property {
  constructor(name) {
    this.name = name || "Unnamed Property";
  }
  
  decimalRounding(decimalPlace) {
    for (var aspect in this) { // Aspects are 
      if (this[aspect] instanceof Object) {
        for (var value in this[aspect]) {
          // Rounds the value in question to the nearest decimal place from the decimalPlace input.
          this[aspect][value] = Math.round(this[aspect][value] * Math.pow(10, decimalPlace)) /
            Math.pow(10, decimalPlace);
        }
      }
    }
  }
}

class Condition extends Property {
  constructor(name) {
    super(name);
  }
}
 
class CyclicalCondition extends Condition {
  constructor(name) {
    super(name);
    
    this.x = {level: null, flux: null, surge: 1,
      dynamism: null, dynamismFlux: null, dynamismSurge: 1};
    this.range = {level: null, flux: null, surge: 1,
      dynamism: null, dynamismFlux: null, dynamismSurge: 1};
    this.period = {level: null, flux: null, surge: 1,
      dynamism: null, dynamismFlux: null, dynamismSurge: 1};
    this.average = {level: null, flux: null, surge: 1,
      dynamism: null, dynamismFlux: null, dynamismSurge: 1};    
  }
  
  get level() {
    return this.range.level * Math.sin(this.period.level * this.x.level) + this.average.level;
  }
}

// 'Steady' because the mean rate of change maintains the same sign and magnitude from tick to tick
class SteadyCondition extends Condition {
  constructor(name) {
    super(name);
    
    this.values = {level: null, rateOfChange: null, flux: null};
  }
}

class Attribute extends Property {
  constructor(name) {
    super(name);
  }
}

class InheritableAttribute extends Attribute {
  constructor(name) {
    super(name);
    
    this.values = {level: null, flux: null, surge: 1,
      mutability: null, mutabilityFlux: null, mutabilitySurge: 1,
      metaMutabilityLevel: null, metaMutabilityFlux: null, metaMutabilitySurge: 1};
  }
}

class PhysicalAttribute extends Attribute {
  constructor(name) {
    super(name);
    
    this.values = {level: null, rateOfChange: null, flux: null};
  }
}
