/*
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
*/

function Entity(xCoord, yCoord) {
  this.id = info.entities.essenceCount + info.entities.lostSouls;
  this.name = "";
  
  this.ancestry = new Map(); // The direct line of its ancestors, all the way to its progenitor
  this.lineage = new Map();  // All its direct descendants, from oldest to youngest.
  
  this.cell = eden.garden[yCoord][xCoord]; // Its presently inhabited cell
  this.x = this.cell.x;
  this.y = this.cell.y;
  this.eden = this.cell.eden;
  this.locality = this.eden.name; // Its present Eden
  this.homeworld = this.eden.id;  // As players have the ability to move an entity from one world.
  
  this.state = "Alive";
  this.turnOfGenesis = this.eden.turn;
  // The cell's ID and coordinates on which it was spawned, and the Eden ID i twas spawned in
  this.genesisLocality = "Cell #" + this.eden.garden[this.y][this.x].id + ", " +
    "Coordinates (" + this.x + ", " + this.y + ") in Eden #" + this.eden.id;
  this.age = 0; // Number of ticks survived thus far.
  
  this.victories = 0; // Number of battles it has won - not every battle results in a kill
  this.kills = 0; // Number of other entities it has slain in battle
  // Number of entities it slew in combat in which it alone initiated combat unprovoked
  this.murders = 0; 
  
  this.turnOfDeath; // Still alive.
  this.deathLocality; // Cell ID number and coordinates, and Eden ID number of death
  this.killer; // Won't necessarily die in battle. This property gives slayer's ID if it is slain
  this.murderer; // If it is slain in battle by an entity that it had not attacked or provoked
  
  // Its chances of surviving on the neighboring local cells
  this.localSurvivalProb = [[1,1,1],
                            [1,1,1],
                            [1,1,1]];
};
